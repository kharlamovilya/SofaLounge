{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ilia\\\\WebstormProjects\\\\sofalounge\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = React.createContext();\nfunction App() {\n  _s();\n  const [theme, setTheme] = useState(\"light\");\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      setTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(SomeComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"1NR3O0/bzzhjlLyt740h+JhxH9c=\");\n_c = App;\nfunction SomeComponent() {\n  _s2();\n  const {\n    theme,\n    setTheme\n  } = useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"The current theme is \", theme]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTheme(theme === \"light\" ? \"dark\" : \"light\"),\n      children: \"Toggle Theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s2(SomeComponent, \"CrVyfxkbaVKs8B1q77aq0EAdMEo=\");\n_c2 = SomeComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SomeComponent\");","map":{"version":3,"names":["ThemeContext","React","createContext","App","_s","theme","setTheme","useState","_jsxDEV","Provider","value","children","SomeComponent","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s2","useContext","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/Ilia/WebstormProjects/sofalounge/src/App.js"],"sourcesContent":["const ThemeContext = React.createContext();\n\nfunction App() {\n    const [theme, setTheme] = useState(\"light\");\n\n    return (\n        <ThemeContext.Provider value={{ theme, setTheme }}>\n            <SomeComponent />\n        </ThemeContext.Provider>\n    );\n}\n\nfunction SomeComponent() {\n    const { theme, setTheme } = useContext(ThemeContext);\n    return (\n        <div>\n            <p>The current theme is {theme}</p>\n            <button onClick={() => setTheme(theme === \"light\" ? \"dark\" : \"light\")}>\n                Toggle Theme\n            </button>\n        </div>\n    );\n}\n"],"mappings":";;;;AAAA,MAAMA,YAAY,GAAGC,KAAK,CAACC,aAAa,CAAC,CAAC;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,OAAO,CAAC;EAE3C,oBACIC,OAAA,CAACR,YAAY,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAEL,KAAK;MAAEC;IAAS,CAAE;IAAAK,QAAA,eAC9CH,OAAA,CAACI,aAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhC;AAACZ,EAAA,CARQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAUZ,SAASS,aAAaA,CAAA,EAAG;EAAAM,GAAA;EACrB,MAAM;IAAEb,KAAK;IAAEC;EAAS,CAAC,GAAGa,UAAU,CAACnB,YAAY,CAAC;EACpD,oBACIQ,OAAA;IAAAG,QAAA,gBACIH,OAAA;MAAAG,QAAA,GAAG,uBAAqB,EAACN,KAAK;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCR,OAAA;MAAQY,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAE;MAAAM,QAAA,EAAC;IAEvE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACE,GAAA,CAVQN,aAAa;AAAAS,GAAA,GAAbT,aAAa;AAAA,IAAAK,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}